#!/usr/bin/env python
import sys
sys.path.append("@CMAKE_INSTALL_PREFIX@/lib/python")

import PySide.QtGui

from pyfab.dialogs import *

class MainWindow(QtGui.QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        QtGui.QMainWindow.__init__(self, parent)
        self.setupUi(self)

        self.imdata = FabberImageData()

        self.imviews = [
            OrthoView(self.orthoFrame),
            FitView(self.fitFrame),
            FocusView(slider=self.timeSlider, sbX=self.sbX, sbY=self.sbY, sbZ=self.sbZ, sbT=self.sbT),
            ParamValuesView(table=self.paramTable),
            DataView(LogViewerDialog(), ChooseRunDialog(), table=self.filesTable, dateLabel=self.dateLabel,
                     logBtn=self.showLogBtn, chooseRunBtn=self.chooseRunBtn, dataBtn=self.dataBtn,
                     maskBtn=self.maskBtn),
            CurrentDataView(slider=self.alphaSlider, cb=self.visibleCB, cmCombo=self.cmCombo,
                            valueEdit=self.dataValueEdit, currentEdit=self.currentEdit),
        ]

        self.views = [
            self.imdata,
            ModelMethodView(modelCombo=self.modelCombo, methodCombo=self.methodCombo),
            ComponentOptionsView("model", "Forward model", dialog=ModelOptionsDialog(), btn=self.modelOptionsBtn,
                                 mat_dialog=MatrixEditDialog()),
            ComponentOptionsView("method", "Inference method", dialog=ModelOptionsDialog(), btn=self.methodOptionsBtn,
                                 mat_dialog=MatrixEditDialog()),
            OptionsView(dialog=ModelOptionsDialog(), btn=self.generalOptionsBtn, mat_dialog=MatrixEditDialog()),
            FileView(runBtn=self.runBtn, runQuickBtn=self.runQuickBtn, saveBtn=self.saveBtn, saveAsBtn=self.saveAsBtn,
                     edit=self.filenameEdit),
            ChooseFileView("fabber", changeBtn=self.execChangeBtn, edit=self.execEdit),
        ]

        self.openBtn.clicked.connect(self.open)
        self.newBtn.clicked.connect(self.new)

    def add_views(self):
        for view in self.views: self.fab.add_view(view)
        for view in self.imviews: self.imdata.add_view(view)

    def refresh(self, fab):
        self.fab = fab
        self.add_views()

    def new(self):
        # fixme unsaved changes
        self.refresh(FabberRunData())

    def open(self):
        filename = QFileDialog.getOpenFileName()[0]
        if filename: self.refresh(FabberRunData(filename))

if __name__ == '__main__':
    app = PySide.QtGui.QApplication(sys.argv)

    win = MainWindow()
    win.show()
    if len(sys.argv) > 1:
        win.refresh(RunFile(sys.argv[1]))

    sys.exit(app.exec_())
