## Prototype SCONS configuration file

import os
fsldir = os.environ["FSLDIR"]

# Basic objects - things that have nothing directly to do with inference
BASIC_SRC = ["tools.cc","dataset.cc","dist_mvn.cc","easylog.cc","setup.cc","fabber_core.cc"]

# Core objects - things that implement the framework for inference
CORE_SRC =  ["noisemodel.cc","fwdmodel.cc","inference.cc","utils.cc","fwdmodel_linear.cc",
	     "fwdmodel_trivial.cc","fwdmodel_poly.cc", "convergence.cc"]

# Inference methods
INFERENCE_SRC= ["inference_vb.cc","inference_nlls.cc","inference_spatialvb.cc"]

# Noise models
NOISE_SRC = ["noisemodel_white.cc","noisemodel_ar.cc"]

TEST_SOURCES=["test/fabbertest.cc","test/test_inference.cc","test/test_spatialvb.cc","test/test_vb.cc",
	      "test/test_convergence.cc","test/test_commandline.cc","test/test_rundata.cc"]

libpath=["%s/lib" % fsldir, "%s/extras/lib" % fsldir]
includes=["%s/include" % fsldir, "%s/extras/include/newmat" % fsldir,"%s/extras/include/boost" % fsldir]
defines=["USE_NEWIMAGE","USE_NLLS","VERSION=\\\"4.0pre\\\""]
libs=["newimage","miscmaths","newmat","fslio","niftiio","utils","pthread","znz","z"]

FABBER_SOURCE = BASIC_SRC + CORE_SRC + INFERENCE_SRC + NOISE_SRC

env = Environment(FSLOUTPUTTYPE="NIFTI_GZ", CPPFLAGS="-g -O2 -Wall")

library = env.StaticLibrary("libfabbercore", FABBER_SOURCE, CPPPATH=includes, LIBPATH=libpath, CPPDEFINES=defines, LIBS=libs)

env.Program("fabber", ["fabber_main.cc", ], 
	CPPPATH=includes, 
	LIBPATH=[".",] + libpath, 
	CPPDEFINES=defines, 
	LIBS=["fabbercore",] + libs)

env.Program("mvntool", ["mvntool.cc", ], 
	CPPPATH=includes, 
	LIBPATH=[".",] + libpath, 
	CPPDEFINES=defines, 
	LIBS=["fabbercore",] + libs)

env.Program("testfabber", TEST_SOURCES, 
	CPPPATH=includes+[".",], 
	LIBPATH=[".",] + libpath, 
	CPPDEFINES=defines, 
	LIBS=["fabbercore","gtest"] + libs)

tests = env.Command(target="test", source="testfabber", action="./runtests.sh")
env.AlwaysBuild(tests)

doc = env.Command(target="doc", source="Doxyfile", action="doxygen")
env.AlwaysBuild(doc)

env.Depends("fabber", library)
env.Default("fabber")

